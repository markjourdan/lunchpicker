@using LunchPicker.Domain.Entities

@model LunchPicker.Web.Areas.Clique.Models.ManageRestaurant
@{
    ViewBag.Title = "manage restaurants";
}

@(Html.Kendo()
    .Grid<Restaurant>()
    .Name("Restaurants")
    .Columns(columns =>
            {
                columns.Bound(p => p.Name);
                columns.Bound(p => p.Address1).Width(100);
                columns.Bound(p => p.Address2).Width(100).Hidden(true);
                columns.Bound(p => p.City).Width(140);
                columns.ForeignKey(p => p.StateId, Model.States, "StateId", "FullName").EditorTemplateName("State").Width(100);
                columns.Bound(p => p.Zip).Width(100);
                columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
            })
    .DataSource(data => data.Ajax()
        .PageSize(20)
        .ServerOperation(false)
        .Model(model =>
            {
                model.Id(p => p.RestaurantId);
                model.Field(column => column.RestaurantId).Editable(false);
            })
        .Events(events => events.Error("error_handler"))
        .Create(create => create.Action("AddRestaurant", "Restaurant", new {Area = "Clique"}).Type(HttpVerbs.Put))
        .Read(read => read.Action("GetRestaurants", "Restaurant", new { Area ="Clique"}).Type(HttpVerbs.Get))
        .Update(update => update.Action("UpdateRestaurant", "Restaurant", new { Area = "Clique"}).Type(HttpVerbs.Post))
        .Destroy(destroy => destroy.Action("DeleteRestaurant", "Restaurant", new {Area = "Clique"}).Type(HttpVerbs.Delete))
        )
    .Events(events => events.Save("SaveRestaurant"))
    .ToolBar(toolbar => toolbar.Create().Text("new restaurant"))
    .Editable(editable => editable.Mode(GridEditMode.PopUp))
    .Sortable()
    .Scrollable()
    )


@section scripts
{
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
        
        function SaveRestaurant(e) {
            console.log(e.model);
            
            e.model.CreatedDateUtc = e.model.CreatedDateUtc.toDateString();
            e.model.LastUpdatedDateUtc = e.model.LastUpdatedDateUtc.toDateString();
        }
    </script>
}
