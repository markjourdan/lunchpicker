@model LunchPicker.Web.Models.Account.LoginModel

@{
    ViewBag.Title = "Log in";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
</hgroup>

<section id="loginForm">
@{ Html.BeginForm(new {ViewBag.ReturnUrl}); } 
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Log in</legend>
        <div class="account-login">
            <ul>
                <li>
                    @Html.LabelFor(m => m.UserName)
                    @Html.TextBoxFor(m => m.UserName, new { @class="k-textbox"})
                    @Html.ValidationMessageFor(m => m.UserName)
                </li>
                <li>
                    @Html.LabelFor(m => m.Password)
                    @Html.PasswordFor(m => m.Password, new { @class="k-textbox"})
                    @Html.ValidationMessageFor(m => m.Password)
                </li>
                <li>
                    @Html.CheckBoxFor(m => m.RememberMe)
                    @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox k-checkbox" })
                </li>
            </ul>
        </div>
        <input type="submit" value="Log in" class="k-button" />
    </fieldset>
    <p>
        @Html.ActionLink("Register", "Register", "Account", new { Area="" }, new {@class="k-button"}) if you don't have an account.
    </p>
@{Html.EndForm();}
</section>

@*<section class="social" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</section>*@

<style type="text/css">
    .account-login ul {
        list-style: none;
        margin: 10px 0;
        padding: 0;
    }
    .account-login li {
         margin: 10px;
    }
    .account-login label
    {
	    display:block;
	    float:left;
	    width:175px;
    }
</style>